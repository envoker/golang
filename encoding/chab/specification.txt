CHAB specification

CHAB - Chander binary

analogue: 
	MessagePack: 
		github.com/vmihailenco/msgpack
		github.com/tinylib/msgp

Type system

Types:

	Null 		(0) - represents nil
	Bool 		(1) - represents true or false
	Signed 		(2) - represents an signed integer
	Unsigned 	(3) - represents an unsigned integer
	Float 		(4) - represents a floating point number
	Bytes 		(5) - represents a byte array
	String 		(6) - represents a UTF-8 string
	Array 		(7) - represents a sequence of objects
	Map			(8) - represents key-value pairs of objects
	Extended		(9) - represents a tuple of type information and object


//-----------------------------------------------------------------------------------------
First byte format:

 -----------------
|  AAAA  |  BBBB  |
 -----------------

where:

* AAAA (high nibble) - type id

	Null 		0
	Bool 		1
	Signed 		2
	Unsigned 	3
	Float 		4
	Bytes 		5
	String 		6
	Array 		7
	Map			8
	Extended		9
	
* BBBB (low nibble) - additional info (it depends on the type of)
	
	Null 		- (0)
	Bool 		- (0): false; (1): true
	Signed 		- (1,2,4,8) - signed int 8/16/32/64 
	Unsigned 	- (1,2,4,8) - unsigned int 8/16/32/64 
	Float 		- (4,8) - float 32/64
	Bytes 		- (1,2,4) -
	String 		- (1,2,4) -
	Array 		- (1,2,4) -
	Map			- (1,2,4) -
	Extended		- (1,2,4) -

possible values:

	0x00 - null
	
	0x10 - bool - false
	0x11 - bool - true
	
	0x21 - signed int 8
	0x22 - signed int 16
	0x24 - signed int 32
	0x28 - signed int 64
	
	0x31 - unsigned int 8
	0x32 - unsigned int 16
	0x34 - unsigned int 32
	0x38 - unsigned int 64
	
	0x44 - float 32
	0x48 - float 64
	
	0x51 - bytes: (size < 2^8)
	0x52 - bytes: (2^8  <= size < 2^16)
	0x54 - bytes: (2^16 <= size < 2^32)

	0x61 - string: (size < 2^8)
	0x62 - string: (2^8  <= size < 2^16)
	0x64 - string: (2^16 <= size < 2^32)

	0x71 - array: (count < 2^8)
	0x72 - array: (2^8  <= count < 2^16)
	0x74 - array: (2^16 <= count < 2^32)

	0x81 - map: (count < 2^8)
	0x82 - map: (2^8  <= count < 2^16)
	0x84 - map: (2^16 <= count < 2^32)
	
	0x91 - extended: (type < 2^8)
	0x92 - extended: (2^8  <= type < 2^16)
	0x94 - extended: (2^16 <= type < 2^32)

//-----------------------------------------------------------------------------------------
Null format family (0):

 --------
|  0x00  |
 --------


//-----------------------------------------------------------------------------------------
Bool format family (1):


false:
 --------
|  0x10  |
 --------


true:
 --------
|  0x11  |
 --------


//-----------------------------------------------------------------------------------------
Signed format family (2):


int 8 stores a 8-bit signed integer
 ---------------------
|  0x21  |  XXXXXXXX  |
 ---------------------


int 16 stores a 16-bit big-endian signed integer
 ------------------------------
|  0x22  |  XXXXXXXX|XXXXXXXX  |
 ------------------------------


int 32 stores a 32-bit big-endian signed integer
 ------------------------------------------------
|  0x24  |  XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX  |
 ------------------------------------------------


int 64 stores a 64-bit big-endian signed integer
 ------------------------------------------------------------------------------------
|  0x28  |  XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX  |
 ------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------
Unsigned format family (3):


uint 8 stores a 8-bit unsigned integer
 ---------------------
|  0x31  |  XXXXXXXX  |
 ---------------------


uint 16 stores a 16-bit big-endian unsigned integer
 ------------------------------
|  0x32  |  XXXXXXXX|XXXXXXXX  |
 ------------------------------


uint 32 stores a 32-bit big-endian unsigned integer
 ------------------------------------------------
|  0x34  |  XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX  |
 ------------------------------------------------


uint 64 stores a 64-bit big-endian unsigned integer
 ------------------------------------------------------------------------------------
|  0x38  |  XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX  |
 ------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------
Float format family (4):


float 32 in format IEEE 754 (byte order: big-endian):
 ------------------------------------------------
|  0x44  |  XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX  |
 ------------------------------------------------


float 64 in format IEEE 754 (byte order: big-endian):
 ------------------------------------------------------------------------------------
|  0x48  |  XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX|XXXXXXXX  |
 ------------------------------------------------------------------------------------


//-----------------------------------------------------------------------------------------
Bytes format family (5):


byte array with length < 2^8:
 ------------------------------
|  0x51  |  XXXXXXXX  |  data  |
 ------------------------------


byte array (2^8 <= length < 2^16):
 ---------------------------------------
|  0x52  |  YYYYYYYY|YYYYYYYY  |  data  |
 ---------------------------------------


byte array (2^16 <= length < 2^32):
 ---------------------------------------------------------
|  0x54  |  ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ  |  data  |
 ---------------------------------------------------------


//-----------------------------------------------------------------------------------------
String format family (6):


string with (length < 2^8):
 ------------------------------
|  0x61  |  XXXXXXXX  |  data  |
 ------------------------------


string with (2^8 <= length < 2^16):
 ---------------------------------------
|  0x62  |  YYYYYYYY|YYYYYYYY  |  data  |
 ---------------------------------------


string with (2^16 <= length < 2^32):
 ---------------------------------------------------------
|  0x64  |  ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ  |  data  |
 ---------------------------------------------------------


//-----------------------------------------------------------------------------------------
Array format family (7):


array with (length < 2^8):
 -----------------------------------
|  0x71  |  XXXXXXXX  |  N objects  |
 -----------------------------------


array with (2^8 <= length < 2^16):
 --------------------------------------------
|  0x72  |  YYYYYYYY|YYYYYYYY  |  N objects  |
 --------------------------------------------


array with (2^16 <= length < 2^32):
 --------------------------------------------------------------
|  0x74  |  ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ  |  N objects  |
 --------------------------------------------------------------

where:
* XXXXXXXX - is a 8-bit unsigned integer which represents N
* YYYYYYYY|YYYYYYYY - is a 16-bit big-endian unsigned integer which represents N
* ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ - is a 32-bit big-endian unsigned integer which represents N
* N is the size of a array


//-----------------------------------------------------------------------------------------
Map format family (8):


 ---------------------------------
|  0x81  |  XXXXXXXX  |  N pairs  |
 ---------------------------------


 ------------------------------------------
|  0x82  |  YYYYYYYY|YYYYYYYY  |  N pairs  |
 ------------------------------------------


 ------------------------------------------------------------
|  0x84  |  ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ  |  N pairs  |
 ------------------------------------------------------------


where:
* pair - key-value:  object|object
	* key - object of: Signed, Unsigned, String, Bytes
	* value - any object.

* XXXXXXXX - is a 8-bit unsigned integer which represents N
* YYYYYYYY|YYYYYYYY - is a 16-bit big-endian unsigned integer which represents N
* ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ - is a 32-bit big-endian unsigned integer which represents N
* N is the size of a map


//-----------------------------------------------------------------------------------------
Extended format family (9):


 --------------------------------
|  0x91  |  XXXXXXXX  |  object  |
 --------------------------------


 -----------------------------------------
|  0x92  |  YYYYYYYY|YYYYYYYY  |  object  |
 -----------------------------------------


 -----------------------------------------------------------
|  0x94  |  ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ  |  object  |
 -----------------------------------------------------------


where:
* XXXXXXXX - is a 8-bit signed integer represents type
* YYYYYYYY|YYYYYYYY - is a 16-bit big-endian signed integer represents type
* ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ|ZZZZZZZZ - is a 32-bit big-endian signed integer represents type
